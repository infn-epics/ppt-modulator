# ============================================================================
# PPT Modulator Control Template - Write Commands
# ============================================================================
# Based on: tcpip-interface-description_IF-MOD2128C_Rev2-1
# 
# This template provides control records for:
# 1. ON/OFF commands (bytes 0-1): 16-bit bitfield for all subsystems
# 2. HVPS Charging Voltage setpoint (bytes 2-3)
#
# Load this template in addition to ppt.template:
#   dbLoadRecords("db/ppt.template", "P=PPT:,R=MOD1:,PORT=PPT1")
#   dbLoadRecords("db/ppt_control.template", "P=PPT:,R=MOD1:,PORT=PPT1")
# ============================================================================

# ==========================================================================
# ON/OFF COMMAND WORD REGISTER (bytes 0-1, 16-bit bitfield)
# ==========================================================================
# This is the master command word sent to the device
# Individual bits control ON/OFF for each subsystem

record(mbbo, "$(P):$(R):OnOffCmd") {
    field(DESC, "ON/OFF Command Register")
    field(DTYP, "stream")
    field(OUT,  "@ppt.proto writeOnOffCmd $(PORT)")
    field(NOBT, "16")
    field(ZRVL, "0")
    field(ZRST, "All OFF")
    info(autosaveFields, "VAL")
}

# ==========================================================================
# INDIVIDUAL ON COMMAND RECORDS (set bits 0-7)
# ==========================================================================

record(bo, "$(P):$(R):Thy:OnCmd") {
    field(DESC, "Thyratron Heater ON")
    field(ZNAM, "Idle")
    field(ONAM, "Turn ON")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

record(bo, "$(P):$(R):Klys:On80Cmd") {
    field(DESC, "Klystron Heater 80% ON")
    field(ZNAM, "Idle")
    field(ONAM, "Turn ON")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

record(bo, "$(P):$(R):Klys:On100Cmd") {
    field(DESC, "Klystron Heater 100% ON")
    field(ZNAM, "Idle")
    field(ONAM, "Turn ON")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

record(bo, "$(P):$(R):Focus:OnCmd") {
    field(DESC, "Focus Power Supply ON")
    field(ZNAM, "Idle")
    field(ONAM, "Turn ON")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

record(bo, "$(P):$(R):Premag:OnCmd") {
    field(DESC, "Premagnetisation ON")
    field(ZNAM, "Idle")
    field(ONAM, "Turn ON")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

record(bo, "$(P):$(R):HVPS:OnCmd") {
    field(DESC, "HVPS ON")
    field(ZNAM, "Idle")
    field(ONAM, "Turn ON")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

record(bo, "$(P):$(R):ChargePFN:OnCmd") {
    field(DESC, "Charge PFN ON")
    field(ZNAM, "Idle")
    field(ONAM, "Turn ON")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

record(bo, "$(P):$(R):Reset:Cmd") {
    field(DESC, "Reset Command (rising edge)")
    field(ZNAM, "Idle")
    field(ONAM, "Reset")
    field(OUT,  "@ppt.proto writeResetCmd $(PORT)")
}

# ==========================================================================
# INDIVIDUAL OFF COMMAND RECORDS (set bits 8-15)
# ==========================================================================

record(bo, "$(P):$(R):Thy:OffCmd") {
    field(DESC, "Thyratron Heater OFF")
    field(ZNAM, "Idle")
    field(ONAM, "Turn OFF")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

record(bo, "$(P):$(R):Klys:Off80Cmd") {
    field(DESC, "Klystron Heater 80% OFF")
    field(ZNAM, "Idle")
    field(ONAM, "Turn OFF")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

record(bo, "$(P):$(R):Klys:Off100Cmd") {
    field(DESC, "Klystron Heater 100% OFF")
    field(ZNAM, "Idle")
    field(ONAM, "Turn OFF")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

record(bo, "$(P):$(R):Focus:OffCmd") {
    field(DESC, "Focus Power Supply OFF")
    field(ZNAM, "Idle")
    field(ONAM, "Turn OFF")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

record(bo, "$(P):$(R):Premag:OffCmd") {
    field(DESC, "Premagnetisation OFF")
    field(ZNAM, "Idle")
    field(ONAM, "Turn OFF")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

record(bo, "$(P):$(R):HVPS:OffCmd") {
    field(DESC, "HVPS OFF")
    field(ZNAM, "Idle")
    field(ONAM, "Turn OFF")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

record(bo, "$(P):$(R):ChargePFN:OffCmd") {
    field(DESC, "Charge PFN OFF")
    field(ZNAM, "Idle")
    field(ONAM, "Turn OFF")
    field(FLNK, "$(P):$(R):CalcOnOffCmd1")
}

# ==========================================================================
# COMMAND WORD CALCULATION
# ==========================================================================
# Combines all individual ON/OFF bits into a single 16-bit word
# Split into multiple calcout records due to CALC string length limit (80 chars)

# Calculate lower byte (bits 0-7: ON commands)
record(calcout, "$(P):$(R):CalcOnOffCmd1") {
    field(DESC, "Calc ON Cmds (bits 0-7)")
    field(INPA, "$(P):$(R):Thy:OnCmd")
    field(INPB, "$(P):$(R):Klys:On80Cmd")
    field(INPC, "$(P):$(R):Klys:On100Cmd")
    field(INPD, "$(P):$(R):Focus:OnCmd")
    field(INPE, "$(P):$(R):Premag:OnCmd")
    field(INPF, "$(P):$(R):HVPS:OnCmd")
    field(INPG, "$(P):$(R):ChargePFN:OnCmd")
    field(INPH, "$(P):$(R):Reset:Cmd")
    field(CALC, "A+(B<<1)+(C<<2)+(D<<3)+(E<<4)+(F<<5)+(G<<6)+(H<<7)")
    field(FLNK, "$(P):$(R):CalcOnOffCmd2")
}

# Calculate upper byte (bits 8-15: OFF commands)
record(calcout, "$(P):$(R):CalcOnOffCmd2") {
    field(DESC, "Calc OFF Cmds (bits 8-15)")
    field(INPA, "$(P):$(R):Thy:OffCmd")
    field(INPB, "$(P):$(R):Klys:Off80Cmd")
    field(INPC, "$(P):$(R):Klys:Off100Cmd")
    field(INPD, "$(P):$(R):Focus:OffCmd")
    field(INPE, "$(P):$(R):Premag:OffCmd")
    field(INPF, "$(P):$(R):HVPS:OffCmd")
    field(INPG, "$(P):$(R):ChargePFN:OffCmd")
    field(CALC, "(A<<8)+(B<<9)+(C<<10)+(D<<11)+(E<<12)+(F<<13)+(G<<14)")
    field(FLNK, "$(P):$(R):CalcOnOffCmd3")
}

# Combine both bytes and write to device
record(calcout, "$(P):$(R):CalcOnOffCmd3") {
    field(DESC, "Combine and Write Command")
    field(INPA, "$(P):$(R):CalcOnOffCmd1")
    field(INPB, "$(P):$(R):CalcOnOffCmd2")
    field(CALC, "A+B")
    field(OUT,  "$(P):$(R):OnOffCmd PP")
    field(OOPT, "Every Time")
}

# ==========================================================================
# AUTO-RESET MECHANISM FOR COMMAND BITS
# ==========================================================================
# Automatically reset command bits after 500ms (pulse mode)
# This ensures commands are edge-triggered, not level-triggered

record(seq, "$(P):$(R):AutoResetOnCmds") {
    field(DESC, "Auto-reset ON commands")
    field(SELM, "All")
    field(DOL1, "0")
    field(LNK1, "$(P):$(R):Thy:OnCmd PP")
    field(DOL2, "0")
    field(LNK2, "$(P):$(R):Klys:On80Cmd PP")
    field(DOL3, "0")
    field(LNK3, "$(P):$(R):Klys:On100Cmd PP")
    field(DOL4, "0")
    field(LNK4, "$(P):$(R):Focus:OnCmd PP")
    field(DOL5, "0")
    field(LNK5, "$(P):$(R):Premag:OnCmd PP")
    field(DOL6, "0")
    field(LNK6, "$(P):$(R):HVPS:OnCmd PP")
    field(DOL7, "0")
    field(LNK7, "$(P):$(R):ChargePFN:OnCmd PP")
    field(DOL8, "0")
    field(LNK8, "$(P):$(R):Reset:Cmd PP")
    field(DLY1, "0.5")
    field(DLY2, "0.5")
    field(DLY3, "0.5")
    field(DLY4, "0.5")
    field(DLY5, "0.5")
    field(DLY6, "0.5")
    field(DLY7, "0.5")
    field(DLY8, "0.5")
}

record(seq, "$(P):$(R):AutoResetOffCmds") {
    field(DESC, "Auto-reset OFF commands")
    field(SELM, "All")
    field(DOL1, "0")
    field(LNK1, "$(P):$(R):Thy:OffCmd PP")
    field(DOL2, "0")
    field(LNK2, "$(P):$(R):Klys:Off80Cmd PP")
    field(DOL3, "0")
    field(LNK3, "$(P):$(R):Klys:Off100Cmd PP")
    field(DOL4, "0")
    field(LNK4, "$(P):$(R):Focus:OffCmd PP")
    field(DOL5, "0")
    field(LNK5, "$(P):$(R):Premag:OffCmd PP")
    field(DOL6, "0")
    field(LNK6, "$(P):$(R):HVPS:OffCmd PP")
    field(DOL7, "0")
    field(LNK7, "$(P):$(R):ChargePFN:OffCmd PP")
    field(DLY1, "0.5")
    field(DLY2, "0.5")
    field(DLY3, "0.5")
    field(DLY4, "0.5")
    field(DLY5, "0.5")
    field(DLY6, "0.5")
    field(DLY7, "0.5")
}

# Trigger auto-reset when any command is processed
record(calcout, "$(P):$(R):TriggerAutoReset") {
    field(DESC, "Trigger Auto Reset")
    field(INPA, "$(P):$(R):CalcOnOffCmd3 CP")
    field(CALC, "1")
    field(OUT,  "$(P):$(R):AutoResetOnCmds.PROC PP")
    field(OOPT, "When Non-zero")
    field(FLNK, "$(P):$(R):TriggerAutoReset2")
}

record(calcout, "$(P):$(R):TriggerAutoReset2") {
    field(DESC, "Trigger Auto Reset 2")
    field(CALC, "1")
    field(OUT,  "$(P):$(R):AutoResetOffCmds.PROC PP")
}

# ==========================================================================
# HVPS CHARGING VOLTAGE SETPOINT (bytes 2-3)
# ==========================================================================
# Value range: 0..500 (0..50.0 kV)
# Example: 45.12 kV = value 451

record(ao, "$(P):$(R):HVPS:VoltageSet") {
    field(DESC, "HVPS Charging Voltage SP")
    field(DTYP, "stream")
    field(OUT,  "@ppt.proto writeHVPSVoltageOnly $(PORT)")
    field(EGU,  "kV")
    field(PREC, "1")
    field(LINR, "LINEAR")
    field(ESLO, "0.1")    # Convert display kV to device units (x10)
    field(EOFF, "0")
    field(HOPR, "50.0")
    field(LOPR, "0")
    field(DRVH, "50.0")
    field(DRVL, "0")
    info(autosaveFields, "VAL")
}

# Readback for confirmation (optional - if device echoes setpoint)
record(ai, "$(P):$(R):HVPS:VoltageSet:RBV") {
    field(DESC, "HVPS Voltage SP Readback")
    field(INP,  "$(P):$(R):HVPS:VoltageSet")
    field(EGU,  "kV")
    field(PREC, "1")
    field(HOPR, "50.0")
    field(LOPR, "0")
}

# ==========================================================================
# SIMPLIFIED CONTROL RECORDS (High-Level Commands)
# ==========================================================================
# These provide simple ON/OFF control for each subsystem

record(bo, "$(P):$(R):Thy:Control") {
    field(DESC, "Thyratron Control")
    field(ZNAM, "OFF")
    field(ONAM, "ON")
    field(OUT,  "$(P):$(R):Thy:ControlFanout.PROC PP")
}

record(fanout, "$(P):$(R):Thy:ControlFanout") {
    field(LNK1, "$(P):$(R):Thy:ControlCalc")
}

record(calcout, "$(P):$(R):Thy:ControlCalc") {
    field(INPA, "$(P):$(R):Thy:Control")
    field(CALC, "A")
    field(OOPT, "Every Time")
    field(DOPT, "Use CALC")
    field(OUT,  "$(P):$(R):Thy:OnCmd PP")    # If 1, trigger ON
    field(FLNK, "$(P):$(R):Thy:ControlCalc2")
}

record(calcout, "$(P):$(R):Thy:ControlCalc2") {
    field(INPA, "$(P):$(R):Thy:Control")
    field(CALC, "!A")
    field(OOPT, "Every Time")
    field(DOPT, "Use CALC")
    field(OUT,  "$(P):$(R):Thy:OffCmd PP")   # If 0, trigger OFF
}

# Similar pattern for other subsystems (Klystron, Focus, Premag, HVPS, ChargePFN)
# Can be expanded as needed
