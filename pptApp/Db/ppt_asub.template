# ============================================================================
# PPT Modulator Database Template - aSub Record Approach (Split into 2 aSubs)
# ============================================================================
# Architecture:
# 1. Master waveform reads all 86 bytes via StreamDevice (SCAN="1 second")
# 2. Two aSub records decode 22 values:
#    - DecodeVC: Voltages and Currents (11 values)
#    - DecodeTFS: Temperatures, Flow, Timers, Status (11 values)
# 3. Individual ai/longin/mbbi records get values from aSub outputs via PP links
# ============================================================================

# Master record - reads all 86 bytes from device
record(waveform, "$(P)RawData") {
    field(DESC, "Raw 86-byte data from device")
    field(DTYP, "stream")
    field(INP,  "@ppt.proto readAllData $(PORT)")
    field(SCAN, "1 second")
    field(FTVL, "UCHAR")
    field(NELM, "86")
    field(FLNK, "$(P)DecodeVC")
}

# Decoder record 1 - Voltages and Currents (11 values)
record(aSub, "$(P)DecodeVC") {
    field(DESC, "Decode Voltages & Currents")
    field(SNAM, "pptDecodeVoltagesCurrent")
    field(SCAN, "Passive")
    
    # Input: raw byte array
    field(INPA, "$(P)RawData NPP NMS")
    field(FTA,  "UCHAR")
    field(NOA,  "86")
    
    # Outputs: 11 voltage and current values
    field(FTVA, "DOUBLE")  field(NOVA, "1")  # HeaterVoltage1
    field(FTVB, "DOUBLE")  field(NOVB, "1")  # HeaterVoltage2
    field(FTVC, "DOUBLE")  field(NOVC, "1")  # ReservoirVoltage
    field(FTVD, "DOUBLE")  field(NOVD, "1")  # KlystronVoltage
    field(FTVE, "DOUBLE")  field(NOVE, "1")  # MagnetVoltageCoil1
    field(FTVF, "DOUBLE")  field(NOVF, "1")  # MagnetVoltageCoil2
    field(FTVG, "DOUBLE")  field(NOVG, "1")  # TotalCurrent
    field(FTVH, "DOUBLE")  field(NOVH, "1")  # HeaterCurrent
    field(FTVI, "DOUBLE")  field(NOVI, "1")  # KlystronCurrent
    field(FTVJ, "DOUBLE")  field(NOVJ, "1")  # MagnetCurrentCoil1
    field(FTVK, "DOUBLE")  field(NOVK, "1")  # MagnetCurrentCoil2
    
    field(FLNK, "$(P)DecodeTFS")
}

# Decoder record 2 - Temperatures, Flow, Timers, Status (11 values)
record(aSub, "$(P)DecodeTFS") {
    field(DESC, "Decode Temp/Flow/Status")
    field(SNAM, "pptDecodeTempFlowStatus")
    field(SCAN, "Passive")
    
    # Input: raw byte array
    field(INPA, "$(P)RawData NPP NMS")
    field(FTA,  "UCHAR")
    field(NOA,  "86")
    
    # Outputs: 11 temp, flow, timer, status values
    field(FTVA, "DOUBLE")  field(NOVA, "1")  # BodyWaterInTemp
    field(FTVB, "DOUBLE")  field(NOVB, "1")  # BodyWaterOutTemp
    field(FTVC, "DOUBLE")  field(NOVC, "1")  # BodyWaterFlow
    field(FTVD, "DOUBLE")  field(NOVD, "1")  # TimerPreheatMin
    field(FTVE, "DOUBLE")  field(NOVE, "1")  # TimerPreheatSec
    field(FTVF, "DOUBLE")  field(NOVF, "1")  # TimerPreheat100Min
    field(FTVG, "DOUBLE")  field(NOVG, "1")  # TimerPreheat100Sec
    field(FTVH, "DOUBLE")  field(NOVH, "1")  # InterlockMsg1
    field(FTVI, "DOUBLE")  field(NOVI, "1")  # InterlockMsg2
    field(FTVJ, "DOUBLE")  field(NOVJ, "1")  # StatusMsg1
    field(FTVK, "DOUBLE")  field(NOVK, "1")  # StatusMsg2
}

# ============================================================================
# VOLTAGE READINGS (from DecodeVC aSub)
# ============================================================================

record(ai, "$(P)HeaterVoltage1") {
    field(DESC, "Heater Voltage 1")
    field(INP,  "$(P)DecodeVC.VALA CP MS")
    field(EGU,  "V")
    field(PREC, "2")
    field(ESLO, "1")
    field(EOFF, "0")
}

record(ai, "$(P)HeaterVoltage2") {
    field(DESC, "Heater Voltage 2")
    field(INP,  "$(P)DecodeVC.VALB CP MS")
    field(EGU,  "V")
    field(PREC, "2")
    field(ESLO, "1")
    field(EOFF, "0")
}

record(ai, "$(P)ReservoirVoltage") {
    field(DESC, "Reservoir Voltage")
    field(INP,  "$(P)DecodeVC.VALC CP MS")
    field(EGU,  "V")
    field(PREC, "2")
    field(ESLO, "1")
    field(EOFF, "0")
}

record(ai, "$(P)KlystronVoltage") {
    field(DESC, "Klystron Voltage")
    field(INP,  "$(P)DecodeVC.VALD CP MS")
    field(EGU,  "V")
    field(PREC, "2")
    field(ESLO, "1")
    field(EOFF, "0")
}

record(ai, "$(P)MagnetVoltageCoil1") {
    field(DESC, "Magnet Voltage Coil 1")
    field(INP,  "$(P)DecodeVC.VALE CP MS")
    field(EGU,  "V")
    field(PREC, "2")
    field(ESLO, "1")
    field(EOFF, "0")
}

record(ai, "$(P)MagnetVoltageCoil2") {
    field(DESC, "Magnet Voltage Coil 2")
    field(INP,  "$(P)DecodeVC.VALF CP MS")
    field(EGU,  "V")
    field(PREC, "2")
    field(ESLO, "1")
    field(EOFF, "0")
}

# ============================================================================
# CURRENT READINGS (from DecodeVC aSub)
# ============================================================================

record(ai, "$(P)TotalCurrent") {
    field(DESC, "Total Current")
    field(INP,  "$(P)DecodeVC.VALG CP MS")
    field(EGU,  "A")
    field(PREC, "2")
    field(ESLO, "1")
    field(EOFF, "0")
}

record(ai, "$(P)HeaterCurrent") {
    field(DESC, "Heater Current")
    field(INP,  "$(P)DecodeVC.VALH CP MS")
    field(EGU,  "A")
    field(PREC, "2")
    field(ESLO, "1")
    field(EOFF, "0")
}

record(ai, "$(P)KlystronCurrent") {
    field(DESC, "Klystron Current")
    field(INP,  "$(P)DecodeVC.VALI CP MS")
    field(EGU,  "A")
    field(PREC, "2")
    field(ESLO, "1")
    field(EOFF, "0")
}

record(ai, "$(P)MagnetCurrentCoil1") {
    field(DESC, "Magnet Current Coil 1")
    field(INP,  "$(P)DecodeVC.VALJ CP MS")
    field(EGU,  "A")
    field(PREC, "2")
    field(ESLO, "1")
    field(EOFF, "0")
}

record(ai, "$(P)MagnetCurrentCoil2") {
    field(DESC, "Magnet Current Coil 2")
    field(INP,  "$(P)DecodeVC.VALK CP MS")
    field(EGU,  "A")
    field(PREC, "2")
    field(ESLO, "1")
    field(EOFF, "0")
}

# ============================================================================
# TEMPERATURE READINGS (from DecodeTFS aSub)
# ============================================================================

record(ai, "$(P)BodyWaterInTemp") {
    field(DESC, "Body Water Input Temp")
    field(INP,  "$(P)DecodeTFS.VALA CP MS")
    field(EGU,  "C")
    field(PREC, "1")
    field(ESLO, "1")
    field(EOFF, "0")
}

record(ai, "$(P)BodyWaterOutTemp") {
    field(DESC, "Body Water Output Temp")
    field(INP,  "$(P)DecodeTFS.VALB CP MS")
    field(EGU,  "C")
    field(PREC, "1")
    field(ESLO, "1")
    field(EOFF, "0")
}

# ============================================================================
# FLOW READINGS (from DecodeTFS aSub)
# ============================================================================

record(ai, "$(P)BodyWaterFlow") {
    field(DESC, "Body Water Flow")
    field(INP,  "$(P)DecodeTFS.VALC CP MS")
    field(EGU,  "L/min")
    field(PREC, "2")
    field(ESLO, "1")
    field(EOFF, "0")
}

# ============================================================================
# TIMER READINGS (from DecodeTFS aSub)
# ============================================================================

record(longin, "$(P)TimerPreheatMin") {
    field(DESC, "Timer Preheating Minutes")
    field(INP,  "$(P)DecodeTFS.VALD CP MS")
    field(EGU,  "min")
}

record(longin, "$(P)TimerPreheatSec") {
    field(DESC, "Timer Preheating Seconds")
    field(INP,  "$(P)DecodeTFS.VALE CP MS")
    field(EGU,  "sec")
}

record(longin, "$(P)TimerPreheat100Min") {
    field(DESC, "Timer Preheat 100% Min")
    field(INP,  "$(P)DecodeTFS.VALF CP MS")
    field(EGU,  "min")
}

record(longin, "$(P)TimerPreheat100Sec") {
    field(DESC, "Timer Preheat 100% Sec")
    field(INP,  "$(P)DecodeTFS.VALG CP MS")
    field(EGU,  "sec")
}

# ============================================================================
# STATUS AND INTERLOCK MESSAGES (from DecodeTFS aSub)
# ============================================================================

record(mbbi, "$(P)InterlockMsg1") {
    field(DESC, "Interlock Messages 1")
    field(INP,  "$(P)DecodeTFS.VALH CP MS")
    field(NOBT, "16")
    field(SHFT, "0")
}

record(mbbi, "$(P)InterlockMsg2") {
    field(DESC, "Interlock Messages 2")
    field(INP,  "$(P)DecodeTFS.VALI CP MS")
    field(NOBT, "16")
    field(SHFT, "0")
}

record(mbbi, "$(P)StatusMsg1") {
    field(DESC, "Status Messages 1")
    field(INP,  "$(P)DecodeTFS.VALJ CP MS")
    field(NOBT, "16")
    field(SHFT, "0")
}

record(mbbi, "$(P)StatusMsg2") {
    field(DESC, "Status Messages 2")
    field(INP,  "$(P)DecodeTFS.VALK CP MS")
    field(NOBT, "16")
    field(SHFT, "0")
}

# ============================================================================
# NOTES:
# ============================================================================
# - RawData waveform scans at 1 second and reads 86 bytes via StreamDevice
# - Two aSub records decode the data:
#   * DecodeVC: Voltages & Currents (11 values)
#   * DecodeTFS: Temperatures, Flow, Timers, Status (11 values)
# - Both aSubs are triggered sequentially via FLNK chain
# - Individual records use CP MS links to get values from aSub outputs
# - All records update atomically from the same 86-byte snapshot
# - Scaling can be applied via ESLO/EOFF fields in individual records
# - This approach is simpler, more maintainable, and easier to debug than StreamDevice protocols
# ============================================================================
