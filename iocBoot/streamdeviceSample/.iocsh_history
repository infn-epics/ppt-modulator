# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
#!../../bin/linux-x86_64/ipcminiSample
#- You may have to change ipcminiSample to something else
#- everywhere it appears in this file
< envPaths
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT)")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT)")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","iocipcminiSample")
epicsEnvSet("TOP","/app/agilentipcmini")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/ipcminiSample.dbd"
ipcminiSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "SPARC:VACUUM")
epicsEnvSet("PORT", "ipcmini1")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("$(PORT)", "$(IP)")
## Load record instances
epicsEnvSet("AD485",0x86)
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):RFDSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x85, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP01:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x86, IMAX=100, OMAX=100")
dbLoadRecords("db/asynRecord.db","P=$(DEVICE):PTLSIP02:, R=ASYNRECORD, PORT=$(PORT), ADDR=0x87, IMAX=100, OMAX=100")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):RFDSIP01,ADDR=0x85, PORT=$(PORT),SCANRATE=2 second")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP01,ADDR=0x86, PORT=$(PORT),SCANRATE=2 second")
dbLoadRecords("db/ipc.template","DEVICE=$(DEVICE):PTLSIP02,ADDR=0x87, PORT=$(PORT),SCANRATE=2 second")
#
#drvAsynSerialPortConfigure("PSIOPGUN01_PORT", "/dev/ttyACM16", 0, 0, 0)
#asynSetOption("PSIOPGUN01_PORT", -1, "baud", "9600")
#asynSetOption("PSIOPGUN01_PORT", -1, "bits", "8")
#asynSetOption("PSIOPGUN01_PORT", -1, "parity", "none")
#asynSetOption("PSIOPGUN01_PORT", -1, "stop", "1")
#asynSetOption("PSIOPGUN01_PORT", -1, "clocal", "Y")
#asynSetOption("PSIOPGUN01_PORT", -1, "crtscts", "N")
#asynSetTraceMask("$(DEVICE)",-1,0x9)
#asynSetTraceIOMask("$(DEVICE)",-1,0x2)
#asynSetTraceMask("ipcmini1", -1, 0xFF)
#asynSetTraceIOMask("ipcmini1", -1, 0x2)
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","epics-streamdevice-template")
epicsEnvSet("TOP","/app/epics-streamdevice-template")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
epicsEnvSet("IOC","epics-streamdevice-template")
epicsEnvSet("TOP","/app/epics-streamdevice-template")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
epicsEnvSet("IOC","epics-streamdevice-template")
epicsEnvSet("TOP","/app/epics-streamdevice-template")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
epicsEnvSet("IOC","epics-streamdevice-template")
epicsEnvSet("TOP","/app/epics-streamdevice-template")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
epicsEnvSet("IOC","epics-streamdevice-template")
epicsEnvSet("TOP","/app/epics-streamdevice-template")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
epicsEnvSet("IOC","epics-streamdevice-template")
epicsEnvSet("TOP","/app/epics-streamdevice-template")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
epicsEnvSet("IOC","streamdeviceSample")
epicsEnvSet("TOP","/app/epics-streamdevice-template")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/streamdeviceSample.dbd"
streamdeviceSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "TEST:STREAMDEVICESAMPLE")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("ASYNPORT", "$(IP)")
## Load record instances
dbLoadRecords("db/streamdevicesample.template","DEVICE=$(DEVICE),PORT=ASYNPORT,module=1,max=100")
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","streamdeviceSample")
epicsEnvSet("TOP","/app/epics-streamdevice-template")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/streamdeviceSample.dbd"
streamdeviceSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "TEST:STREAMDEVICESAMPLE")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("ASYNPORT", "$(IP)")
## Load record instances
dbLoadRecords("db/streamdevicesample.template","DEVICE=$(DEVICE),PORT=ASYNPORT,module=1,max=100")
cd "${TOP}/iocBoot/${IOC}"
iocInit
epicsEnvSet("IOC","streamdeviceSample")
epicsEnvSet("TOP","/app/epics-streamdevice-template")
epicsEnvSet("EPICS_BASE","/epics/epics-base")
epicsEnvSet("ASYN","/epics/support/asyn")
epicsEnvSet("CALC","/epics/support/calc")
epicsEnvSet("SUPPORT","/epics/support")
epicsEnvSet("STREAMDEVICE","/epics/support/StreamDevice")
epicsEnvSet("MODBUS","/epics/support/modbus")
cd "${TOP}"
# Evironment variables
epicsEnvSet("STREAM_PROTOCOL_PATH", "${TOP}/db")
epicsEnvSet("BOOT","${TOP}/iocBoot/${IOC}")
## Register all support components
dbLoadDatabase "dbd/streamdeviceSample.dbd"
streamdeviceSample_registerRecordDeviceDriver pdbbase
### Create a IPCMini device instance
epicsEnvSet("DEVICE", "TEST:STREAMDEVICESAMPLE")
epicsEnvSet("IP", "192.168.197.105:4002")
## Create asyn IP port for communication over TCP/IP
drvAsynIPPortConfigure ("ASYNPORT", "$(IP)")
## Load record instances
dbLoadRecords("db/streamdevicesample.template","DEVICE=$(DEVICE),PORT=ASYNPORT,module=1,max=100")
cd "${TOP}/iocBoot/${IOC}"
iocInit
